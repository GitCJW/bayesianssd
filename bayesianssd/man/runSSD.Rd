% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{runSSD}
\alias{runSSD}
\title{Runs a sample size determination}
\usage{
\code{runSSD(
 model,
 dataCreationFunction,
 powerDesired = 0.8,
 minN = 2,
 maxN = 100,
 factorN = 1,
 goals,
 con = 200,
 iParallel = 10)}
}
\arguments{
\item{model}{An object of class \code{stanmodel, stanreg or brmsfit}.}

\item{dataCreationFunction}{A function that accepts a single parameter, \code{N}, and should generates N values in the same manner as the given \code{model}.}

\item{powerDesired}{The probability of achieving the goal (condition) when the experiment is repeated.}

\item{minN}{The minimum number of data points. If your data contains e.g. 4 groups the minimum number should be at least 4.}

\item{maxN}{The maximum allowable sample size. Larger values will increase the time required for the determination.}

\item{factorN}{Set this factor when your data includes groups that should be treated equally.
For example, if your \code{dataCreationFunction} generates data for a control group and two treatment groups,
you can use a factor of 3 to ensure that each group has the same number of samples. Alternatively, you can provide a vector of permitted N values.}

\item{goals}{The condition be tested. Use the function \link[ssdbayas]{createGoal} to create such goals.}

\item{con}{The rough number of simulations needed for each sample size. Default: 200}

\item{iParallel}{Number of runs in parallel, if an appropriate strategy is chosen (check \link[future]{plan}). Default: 20.}
}
\value{
A object containing all information about the sample size determination.
}
\description{
This function determines the sample size required for a well-defined model based on a specific condition or 'goal'.
}
\examples{
\code{
dataCreationFunction <- function(N){
 group_effects <- c(
   control = 13,
   drug = 7
 )
 treatment <- rep(c("control", "drug"), length.out=N)
 y <- rpois(N, group_effects)

 data <- data.frame(
   treatment = treatment,
   y = y
 )
 data
}

model <- stan_glm("y~-1+treatment", data=dataCreationFunction(20), family=poisson())

goal <- createGoal(parametersA = "treatmentcontrol", parametersB = "treatmentdrug",
                  goalType = "rope", ropeType = "exclude", ropeLower = 0, ropeUpper = 0, ci = 0.95)

checkSettings(model, dataCreationFunction, 2, list(goal))

plan("multisession")
ssd <- runSSD(
 model = model,
 dataCreationFunction = dataCreationFunction,
 powerDesired = 0.8,
 minN = 2,
 maxN = 20,
 goals = list(goal),
 con = 200,
 iParallel = 20)

plotResults(ssd)
printSSD(ssd)}

}
